name: Football News Bot

on:
  schedule:
    # Her 30 dakikada bir çalışır (7/24 aktif)
    - cron: '*/30 * * * *'
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run mode (true/false)'
        required: false
        default: 'false'
      max_items:
        description: 'Maximum items to process'
        required: false
        default: '5'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: futbot
  cancel-in-progress: true

permissions:
  contents: write  # Dedupe cache dosyasına commit için

jobs:
  run-bot:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install python-dotenv langdetect
        python -c "import nltk; nltk.download('punkt'); nltk.download('punkt_tab'); nltk.download('stopwords')"
    
    - name: Determine run mode
      id: mode
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "dry_run=${{ github.event.inputs.dry_run }}" >> $GITHUB_OUTPUT
          echo "max_items=${{ github.event.inputs.max_items }}" >> $GITHUB_OUTPUT
        elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "dry_run=false" >> $GITHUB_OUTPUT
          echo "max_items=5" >> $GITHUB_OUTPUT
        else
          echo "dry_run=true" >> $GITHUB_OUTPUT
          echo "max_items=3" >> $GITHUB_OUTPUT
        fi
    
    - name: Test X/Twitter connection
      env:
        X_API_KEY: ${{ secrets.X_API_KEY }}
        X_API_SECRET: ${{ secrets.X_API_SECRET }}
        X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
        X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
        OPENVERSE_CLIENT_ID: ${{ secrets.OPENVERSE_CLIENT_ID }}
        OPENVERSE_CLIENT_SECRET: ${{ secrets.OPENVERSE_CLIENT_SECRET }}
      run: |
        python -m app.main test-connection
    
    - name: Run news bot
      env:
        X_API_KEY: ${{ secrets.X_API_KEY }}
        X_API_SECRET: ${{ secrets.X_API_SECRET }}
        X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
        X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
        OPENVERSE_CLIENT_ID: ${{ secrets.OPENVERSE_CLIENT_ID }}
        OPENVERSE_CLIENT_SECRET: ${{ secrets.OPENVERSE_CLIENT_SECRET }}
      run: |
        if [ "${{ steps.mode.outputs.dry_run }}" = "true" ]; then
          python -m app.main run-once --dry-run --max ${{ steps.mode.outputs.max_items }}
        else
          python -m app.main run-once --no-dry-run --max ${{ steps.mode.outputs.max_items }}
        fi
    
    - name: Show bot status
      env:
        X_API_KEY: ${{ secrets.X_API_KEY }}
        X_API_SECRET: ${{ secrets.X_API_SECRET }}
        X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
        X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
      run: |
        python -m app.main status
    
    - name: Cleanup old entries
      run: |
        python -m app.main cleanup --days 30
    
    - name: Commit database changes
      if: steps.mode.outputs.dry_run == 'false'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/posted.db || true
        git diff --staged --quiet || git commit -m "Update posted items database [skip ci]"
        git push || true
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bot-logs
        path: logs/
        retention-days: 7
